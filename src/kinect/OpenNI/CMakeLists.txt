# Copyright: (C) 2009 RobotCub Consortium
# Author: Paul Fitzpatrick
# CopyPolicy: Released under the terms of the LGPLv2.1 or later, see LGPL.TXT
 
IF (COMPILE_DEVICE_LIBRARY)
	PREPARE_DEVICE(KinectDeviceLocal TYPE KinectDeviceDriverServer INCLUDE KinectYarpDeviceServerLib/KinectDeviceDriverServer.h)
	PREPARE_DEVICE(KinectDeviceClient TYPE KinectDeviceDriverClient INCLUDE KinectYarpDeviceClientLib/KinectDeviceDriverClient.h)
ENDIF (COMPILE_DEVICE_LIBRARY)

IF (ENABLE_KinectDeviceLocal OR ENABLE_KinectDeviceClient)
  FIND_PACKAGE(YARP REQUIRED)
  INCLUDE_DIRECTORIES(${YARP_INCLUDE_DIRS})
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/IKinectDevice)
  LINK_LIBRARIES(${YARP_LIBRARIES})
  add_subdirectory (lib) 
ENDIF()

IF (ENABLE_KinectDeviceLocal)
  add_subdirectory (KinectYarpDeviceServerLib)
  SET(CORELIBS ${YARP_LIBRARIES} YarpInterfaceLib KinectYarpDeviceServerLib)
  add_subdirectory (KinectDeviceDriverServer) 
ENDIF()

IF (ENABLE_KinectDeviceClient)  
  add_subdirectory (KinectYarpDeviceClientLib)
ENDIF()















if (false)


# Generated by "yarp cmake"
cmake_minimum_required(VERSION 2.6)


# A cmake file to get started with for new YARP projects.
# It assumes you want to build an executable from source code in 
# the current directory.
# Replace "yarpy" with whatever your executable should be called.
# There's some stuff to make compiling devices easier too.

SET(KEYWORD "InterfaceYarpDriver")

MESSAGE( "Start of " ${KEYWORD})

# Start a project.
PROJECT(${KEYWORD})

# Find packages!
FIND_PACKAGE(YARP)
LINK_LIBRARIES(${YARP_LIBRARIES})
INCLUDE_DIRECTORIES(${YARP_INCLUDE_DIRS})


add_subdirectory (lib) 
INCLUDE_DIRECTORIES (IKinectDevice)
add_subdirectory (KinectYarpDeviceClientLib)
add_subdirectory (KinectYarpDeviceServerLib)  

SET(CORELIBS ${YARP_LIBRARY} YarpInterfaceLib KinectYarpDeviceClientLib KinectYarpDeviceServerLib)

add_subdirectory (KinectDeviceDriverServer) 
add_subdirectory (TEST)

endif()